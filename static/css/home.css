/* position:relative 子要素の基準点として使われる*/
/* overflow: hidden;はみ出した子要素を非表示にする */
/* 切れる場合はメディアクエリで対応しようかな */
.title-area {
  position: relative;
  width: 100%;
  height: calc(100vh - 200px);
  overflow: hidden;
}

/* 絶対位置で中心に */
.titlebox {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* display: flex; */
  /* justify-content: center;
  align-items: center; */
  width: 70%;
  text-align: center;
  z-index: 10;
  /* isolation: isolate; */
}

/* white-space: nowrap; 要素内のテキストを強制的に1行にする */
.title {
  white-space: nowrap;
  color: #fff;
  /* opacity: 0; */
}



/* javascritで操作して変化させる */
/* display:inline-block; */
/* インラインのようにテキストの流れに沿いながらも、ブロック要素のようにサイズ・アニメーションを細かく制御できる */
/* animation: アニメーション名 時間 間隔指定（steps） 再生方向; */
/* 間隔指定：steps(1, end); 1段階で最後にジャンプ（"end"）
➜ つまり「一瞬で変化させる」という意味。*/
/* forwards
➡ アニメーション完了後に、最終状態（opacity:1 など）をそのまま保持します。
もし forwards がなければ、アニメーション完了後にまた opacity:0 に戻ってしまうので、意味がなくなる。 */
.title span {
    white-space: nowrap;
    font-size: clamp(1.0rem,4.0vw,4.0vw);
    font-weight: 500;
    letter-spacing: -2px;
    color: rgb(48,48,48);            /* 初期：薄いグレー */
    opacity: 0.1;                /* 初期：非表示 */
    display: inline-block;
    animation: showOne 0.6s steps(1, end) forwards;
    transition: opacity 1.5s ease;
}


/* アニメーションが発動するとopacity:1;より文字が現れる */
@keyframes showOne {
  to {
    opacity: 1;
    font-weight: 500;
    color: rgb(80,80,80);         /* 最終：濃いグレー（ほぼ黒） */
  }
}

/* forwards指定により完了後もアニメーションstyleとして残り続けるので
animationのopacityが残り続ける（最優先レイヤーで上書き不可）のでanmationをnoneにする */
.title span.cover{
  opacity: 0;
}


/* タイトル歯車画像 */
.title-img {
    position: absolute;  
    /* ↓だけでは要素の左上端が中央になっている */
    top: 50%;
    left: 50%;
    /* ↓要素自身の幅・高さの50%分、左と上にズラす */
    transform: translate(-50%, -50%);
    display: inline-block;
    width:clamp(5.0vw,18vw,22vw);
    height: auto;
    opacity:0;
    animation:spin 12s linear infinite;
    /* transition:プロパティの変化時間や変化の仕方を決める */
    transition: opacity 2.0s ease;
}

.title-img.show {
  opacity:0.88;
}

/* ↓アニメーション */
/* 0% アニメーションの最初の状態を定義 */
/* 100% アニメーションの最後の状態を定義 */
/* 要素の中心を保ったまま0度から360度回転する */
@keyframes spin {
  0%   { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* ヘッダーの出現を定義 */
header {
    opacity: 0;
    transform: translateY(-50px);
    transition: opacity 1.0s ,transform 1.0s ease-out;
}

header.show{
    opacity:1;
    transform:translateY(0px)
}


/* メイン部分の出現を定義 */
main {
    /* margin-top:-50px; */
    opacity: 0;
    transform: translateY(50px);    /*下に50pxずらす*/
    transition: opacity 1.0s ,transform 1.0s ease-out;
}

main.show{
    opacity:1;
    transform:translateY(0px)   /*ずらしを解消する*/
}

.introduction,
.service,
.works {
    margin: auto;
    width:65%;
    /* position: relative; */
    /* z-index: 1; */
}

.content-title {
    margin-top: 80px;
    margin-bottom: 45px;
}

.content-title h3 {
    text-align: center;
    font-size: 1.5rem;
    font-family: 'Raleway', sans-serif;
    font-weight: 300;
    letter-spacing: 2.5px;
    color: #333;         
}


/* 各々の作ったものの紹介部分 */
.grid-application {
    display: grid;
    grid-template-columns: repeat(3,1fr);
    gap:35px;
}

/* 各々のアプリやポートフォリオ部分 */
.item {
    background-color: rgb(200,200,200);
    border-radius: 4px;
    aspect-ratio: 1 / 1;  /* 正方形にする (横と縦の比を決める)*/
    overflow: hidden;   /* はみ出した画像の部分は表示しない */
}

/* アプリ・ポートフォリオ画像部分 */
.item img {
    /* border-radius: 4px; */
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 4px;
    border: rgb(180, 180, 180) solid 1px;
}



@media (max-width:1020px) {
    .titlebox{
        width:100%;
    }
    .title span{
        font-size: clamp(1.0rem,5.0vw,5.0vw);
        font-weight: 500;
        color:rgb(48,48,48);
        letter-spacing: 0px;
    }
    .title-img {
        width:clamp(20.0vw,25vw,30vw);
    }
    main {
        margin-top:-45px;
    }
    .introduction,
    .service,
    .works {
      width:92%;
    }
    .grid-application {
        grid-template-columns: repeat(3,1fr);
        gap:25px;
    }
}


@media (max-width: 768px){            /* ←ブレークポイントは好きに */
  .titlebox{
    width:100%;
    padding: 0 .5rem;                       /* 左右パディングをゼロに */
  }
  .title{
    width:100%;
    /* flex:1 1 auto;                    /* 余った幅をそっくり取る */
    /* display:block;                    幅=100% を確実に */
    /* margin:0;                         h1 の外余白を打ち消す */
    /* font-size: clamp(0.8rem,6vw,8rem); 端いっぱい感を強調 */
    /* letter-spacing:0;                 広がりを邪魔する詰め字を解除 */
  }
  .title span{
      font-size: clamp(0.8rem,5vw,8rem);
      font-weight: 500;
      color:rgb(48,48,48);
      letter-spacing: 0px;
  }
  .title-img {
      width:clamp(22.0vw,28vw,32vw);
  }
}


@media (max-width: 550px){            /* ←ブレークポイントは好きに */
    .title-img {
        width:clamp(40.0vw,55vw,60vw);
    }
    .introduction,
    .service,
    .works {
      width:60%;
    }
    .grid-application {
        grid-template-columns: repeat(1,1fr);
        gap:20px;
    }
}

/*

・結構使われる上からスライドふわっと

.fade-in {
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.8s ease-out;
}

.fade-in.show {
  opacity: 1;
  transform: translateY(0);
}

   */